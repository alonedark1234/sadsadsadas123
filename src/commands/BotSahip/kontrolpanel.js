const { MessageEmbed, MessageActionRow, MessageButton,Discord,MessageSelectMenu } = require("discord.js");
const { Modal, TextInputComponent, showModal,discordModals,TextInputStyle  } = require('discord-modals');
const cezapuan = require("../../schemas/cezapuan");
const messageUser = require("../../schemas/messageUser");
const voiceUser = require("../../schemas/voiceUser");
const voiceUserParent = require("../../schemas/voiceUserParent");
const inviterSchema = require("../../schemas/inviter");
const inviteMemberSchema = require("../../schemas/inviteMember");
const nameData = require("../../schemas/names")
const conf = require("../../configs/config.json")
const allah = require("../../configs/sunucuayar.json")
const ayarlar = require("../../configs/sunucuayar.json")
const { miniicon, voice, mesaj2, star } = require("../../configs/emojis.json")
const moment = require("moment");
moment.locale("tr");
const client = global.bot;

module.exports = {
  conf: {
    aliases: [],
    name: "btpanel",
    owner: true,
  },

  run: async (client, message, args, interaction) => {

var yetkili = new MessageButton().setCustomId("yetkili").setLabel("Yetkili Olmak Ä°stiyorum").setStyle("SUCCESS").setEmoji("1045351048354738227")
var canli = new MessageButton().setCustomId("canlidestek").setLabel("CanlÄ± Destek Ä°stiyorum").setStyle("SECONDARY").setEmoji("1088272266044919960")
var sorun = new MessageButton().setCustomId("soruns").setLabel("SorunlarÄ±mÄ± Ä°letmek Ä°stiyorum").setStyle("SUCCESS").setEmoji("1088272559713308784")
var istek = new MessageButton().setCustomId("istekss").setLabel("Ä°steklerimi Ä°letmek Ä°stiyorum").setStyle("SECONDARY").setEmoji("1088272632471887964")

const row = new MessageActionRow().addComponents([yetkili,canli]);
const row2 = new MessageActionRow().addComponents([sorun,istek]);




      const kÄ±sayollar = new MessageActionRow()
			.addComponents(
				new MessageSelectMenu()
					.setCustomId('kÄ±sayollar')
					.setPlaceholder('Komutlar hakkÄ±nda yardÄ±m almak iÃ§in tÄ±kla!')
					.addOptions([
						{ label: 'KullanÄ±cÄ± KomutlarÄ±',description: 'Davet Komutlar kategorisinin yardÄ±m bilgileri iÃ§in tÄ±kla!',value: 'kÄ±sayollar1',},
						{ label: 'Market KomutlarÄ±',description: 'Davet Komutlar kategorisinin yardÄ±m bilgileri iÃ§in tÄ±kla!',value: 'kÄ±sayollar2',},  
						{ label: 'KayÄ±t KomutlarÄ±',description: 'Genel Komutlar kategorisinin yardÄ±m bilgileri iÃ§in tÄ±kla!',value: 'kÄ±sayollar3',},						
            { label: 'CezalandÄ±rma KomutlarÄ±',description: 'KayÄ±t Komutlar kategorisinin yardÄ±m bilgileri iÃ§in tÄ±kla!',value: 'kÄ±sayollar4',},
            { label: 'Stat KomutlarÄ±',description: 'Kurucu Komutlar kategorisinin yardÄ±m bilgileri iÃ§in tÄ±kla!',value: 'kÄ±sayollar5',},
            { label: 'Yetkili KomutlarÄ±',description: 'Moderasyon Komutlar kategorisinin yardÄ±m bilgileri iÃ§in tÄ±kla!',value: 'kÄ±sayollar6',},
            { label: 'Kurucu KomutlarÄ±',description: 'Stat Komutlar kategorisinin yardÄ±m bilgileri iÃ§in tÄ±kla!',value: 'kÄ±sayollar7',},
            {	label: 'Sahip KomutlarÄ±',description: 'Yetkili Komutlar kategorisinin yardÄ±m bilgileri iÃ§in tÄ±kla!',value: 'kÄ±sayollar8',},
					]),
			);
  

     client.api.channels(message.channel.id).messages.post({ data: {"content":
`**Merhaba!** Astenia
Ä°stek veya Ã¶nerin mi var?
Yetkili olmak mÄ± istiyorsun?
Bir yetkiliden destek almak ister misin?
Botlarla veya komutlarla ilgili bir sorunun mu var? 
AÅŸaÄŸÄ±da ki menÃ¼ veya dÃ¼ÄŸmeleri kullanarak yapabileceÄŸiniz kÄ±sayollar bulunmaktadÄ±r.`,
                "components":                          
 [{
                    "type": 1, "components": [{
                        "type": 3, "custom_id": "games", "options": [
                            { "label": "Ceza PuanÄ±", "value": "cezapuan",description: 'Sunucu iÃ§erisindeki ceza puanÄ±m.',"emoji": { "id": "1042946131077902417" }, },
                            { "label": "Ä°sim Bilgisi", "value": "nick",description: 'Sunucudaki eski isim bilgilerinizi gÃ¶rÃ¼ntÃ¼leyin.', "emoji": { "id": "1042946131077902417" }, },
                            { "label": "Hesap Tarihi", "value": "hesaptarih",description: 'HesabÄ±nÄ±zÄ±n aÃ§Ä±lÄ±ÅŸ tarihini Ã¶ÄŸrenin.', "emoji": { "id": "1042946131077902417" }, },
                            { "label": "Davet Bilgisi", "value": "davet",description: 'Davet Bilgilerinizi Ã¶ÄŸrenin.', "emoji": { "id": "1042946131077902417" }, },
                            { "label": "KatÄ±lÄ±m Tarihi", "value": "katÄ±lÄ±mtarih", description: 'Sunucuya giriÅŸ tarihinizi Ã¶ÄŸrenin.',"emoji": { "id": "1042946131077902417" }, },
                            { "label": "Gereksiz Rol Temizle", "value": "gereksizrol", description: 'Ãœzerinizde bulunan etkinlik ve diÄŸer rolleri Ã¼zerinizden kaldÄ±rÄ±r.',"emoji": { "id": "1042946131077902417" }, },
                            { "label": "HaftalÄ±k Ä°statistikler", "value": "weeklystats", description: 'Sunucudaki haftalÄ±k ses ve mesaj bilgilerinizi gÃ¶rÃ¼ntÃ¼leyin.',"emoji": { "id": "1042946131077902417" },},
                            { "label": "Sunucu Bilgisi", "value": "serverinfo",description: 'Sunucunun anlÄ±k aktif listestini gÃ¶rÃ¼ntÃ¼leyin', "emoji": { "id": "1042946131077902417" },},
                            { "label": "Rol Bilgisi", "value": "roleinfo",description: 'ÃœstÃ¼nÃ¼zde bulunan rolleri listeleyin.', "emoji": { "id": "1042946131077902417" }, },  
                        ], "placeholder": "SeÃ§im Yap", "min_values": 0, "max_values": 1
                    }],
                }
                ,kÄ±sayollar,row,row2]
            }
        })

 }
  },


client.on('interactionCreate', async interaction => {

var evet = new MessageButton().setCustomId("evet").setLabel("Evet").setStyle("SUCCESS")
var hayir = new MessageButton().setCustomId("hayir").setLabel("HayÄ±r").setStyle("DANGER")
var dk = new MessageButton().setCustomId("kapat").setLabel("Destek SonlandÄ±r").setStyle("SECONDARY").setEmoji("ðŸŽ«")
const row3 = new MessageActionRow().addComponents([evet,hayir]);
const row31 = new MessageActionRow().addComponents([dk]);

const member = interaction.user;
const inviterData = await inviterSchema.findOne({ guildID: conf.guildID, userID: interaction.user.id });
const total = inviterData ? inviterData.total : 0;
const regular = inviterData ? inviterData.regular : 0;
const bonus = inviterData ? inviterData.bonus : 0;
const leave = inviterData ? inviterData.leave : 0;
const fake = inviterData ? inviterData.fake : 0;
const invMember = await inviteMemberSchema.find({ guildID: conf.guildID, inviter: interaction.user.id });
const daily = invMember ? interaction.guild.members.cache.filter((m) => invMember.some((x) => x.userID === m.user.id) && Date.now() - m.joinedTimestamp < 1000 * 60 * 60 * 24).size : 0;
const weekly = invMember ? interaction.guild.members.cache.filter((m) => invMember.some((x) => x.userID === m.user.id) && Date.now() - m.joinedTimestamp < 1000 * 60 * 60 * 24 * 7).size : 0;
const tagged = invMember ? interaction.guild.members.cache.filter((m) => invMember.some((x) => x.userID === m.user.id) && m.user.username.includes(conf.tag)).size : 0;
////////////////////////////////////////////////////////////////////////////////////////////
const cezapuanData = cezapuan.findOne({ userID: interaction.user.id });
const data = await nameData.findOne({ guildID: conf.guildID, userID: member.id });

////////////////////////////////////////////////////////////////////////////////////////////
 var AktifMember = (interaction.guild.members.cache.filter(m => m.presence && m.presence.status !== "offline").size)
const messageData = await messageUser.findOne({ guildID: conf.guildID, userID: interaction.user.id });
const voiceData = await voiceUser.findOne({ guildID: conf.guildID, userID: interaction.user.id });

  const messageWeekly = messageData ? messageData.weeklyStat : 0;
  const voiceWeekly = moment.duration(voiceData ? voiceData.weeklyStat : 0).format("H [saat], m [dakika]");
  const messageDaily = messageData ? messageData.dailyStat : 0;
  const voiceDaily = moment.duration(voiceData ? voiceData.dailyStat : 0).format("H [saat], m [dakika]");

////////////////////////////////////////////////////////////////////////////////////////////

const category = async (parentsArray) => {
  const data = await voiceUserParent.find({ guildID: conf.guildID, userID: member.id });
  const voiceUserParentData = data.filter((x) => parentsArray.includes(x.parentID));
  let voiceStat = 0;
  for (var i = 0; i <= voiceUserParentData.length; i++) {
    voiceStat += voiceUserParentData[i] ? voiceUserParentData[i].parentData : 0;
  }
  return moment.duration(voiceStat).format("H [saat], m [dakika] s [saniye]");
};

////////////////////////////////////////////////////////////////////////////////////////////

        if(interaction.customId === "istekss") {


        const modal = new Modal()
        .setCustomId('istekoneri')
        .setTitle('Ä°stek & Ã–neri Formu')
        .addComponents(
          new TextInputComponent()
          .setCustomId('istekk')
          .setLabel('Ä°STEK VEYA Ã–NERÄ°NÄ°Z NEDÄ°R?')
          .setStyle('LONG')
          .setMinLength(10)
          .setMaxLength(980)
          .setPlaceholder('Ä°steÄŸinizi ve Ã¶nerinizi bizlere iletin..')
          .setRequired(true)
        );
        showModal(modal, { client: client, interaction: 1 });
        showModal(modal, { client, interaction });


    }
        if(interaction.customId === "soruns") {


        const modal = new Modal()
        .setCustomId('sikayet')
        .setTitle('SorunlarÄ± Ä°let')
        .addComponents(
          new TextInputComponent()
          .setCustomId('sikaayet')
          .setLabel('Sorunu AnlatÄ±r MÄ±sÄ±nÄ±z')
          .setStyle('LONG')
          .setMinLength(10)
          .setMaxLength(500)
          .setPlaceholder('Ã–rn: KayÄ±t ederken bir hata oluÅŸtu ve kayÄ±t edemiyorum.')
          .setRequired(true)
        );
        showModal(modal, { client: client, interaction: 1 });
        showModal(modal, { client, interaction });
    }

    if(interaction.customId === "yetkili") {

      if(![ayarlar.TagRoleID].some(role => client.guilds.cache.get(ayarlar.GuildID).members.cache.get(interaction.user.id).roles.cache.get(role))) {
        return interaction.reply({ content: ":x: TagÄ±n olmadÄ±ÄŸÄ± iÃ§in baÅŸvuramazsÄ±n.", ephemeral: true })
      } else if([ayarlar.staffs].some(role2 => client.guilds.cache.get(ayarlar.GuildID).members.cache.get(interaction.user.id).roles.cache.get(role2))) {
        return interaction.reply({ content: ":x: Zaten Yetkili RolÃ¼ne Sahip olduÄŸun iÃ§in baÅŸvuramazsÄ±n.", ephemeral: true })
      } else {
        const modal = new Modal()
        .setCustomId('ybasvuru')
        .setTitle('Yetkili BaÅŸvuru')
        .addComponents(
          new TextInputComponent()
          .setCustomId('isimyas')
          .setLabel('Ä°sim ve YaÅŸÄ±nÄ±z ?')
          .setStyle('SHORT')
          .setMinLength(5)
          .setMaxLength(20)
          .setPlaceholder('LÃ¼tfen buraya yazÄ±n. / Ã–rn: Pashq 18')
          .setRequired(true),
          new TextInputComponent()
          .setCustomId('aktiflik')
          .setLabel('Sunucumuzda gÃ¼nlÃ¼k aktifliÄŸiniz ?')
          .setStyle('SHORT')
          .setMinLength(1)
          .setMaxLength(10)
          .setPlaceholder('LÃ¼tfen buraya yazÄ±n. / Ã–rn: 8 Saat')
          .setRequired(true),
          new TextInputComponent()
          .setCustomId('yarar')
          .setLabel('Sunucumuz iÃ§in neler yapabilirsiniz ?')
          .setStyle('SHORT')
          .setMinLength(10)
          .setMaxLength(250)
          .setPlaceholder('LÃ¼tfen buraya yazÄ±n. / Ã–rn: GÃ¼nlÃ¼k 5 invite ya da DiÄŸer...')
          .setRequired(true),
          new TextInputComponent()
          .setCustomId('hakkÄ±nda')
          .setLabel('Kendiniz hakkÄ±nda biraz bilgi ?')
          .setStyle('LONG')
          .setMinLength(10)
          .setMaxLength(400)
          .setPlaceholder('LÃ¼tfen buraya yazÄ±n. / Ã–rn: MÃ¼zik dinlemeyi severim.')
          .setRequired(true)
        );
        
        showModal(modal, { client: client, interaction: 1 });
        showModal(modal, { client, interaction });
    
      }}

////////////////////////////////////////////////////////////////////////////////////////// CANLI DESTEK

const collector = interaction.channel.createMessageComponentCollector({ componentType: 'BUTTON', max: 2, time: 20000 });

        if(interaction.customId === "canlidestek") {
          await interaction.reply({ content: `GÃ¶rÃ¼ÅŸmelerimiz kayÄ±t altÄ±na alÄ±nmaktadÄ±r! Trolleyen/Gereksiz kullananlar cezalandÄ±rÄ±lacaktÄ±r. CanlÄ± desteÄŸe baÄŸlanmak istediÄŸinizden emin misiniz?` , components: [row3], ephemeral: true});
    } 
        
        if(interaction.customId === "evet") {
          await interaction.reply({ content: `Sizi canlÄ± destek ekibimize baÄŸlÄ±yorum, lÃ¼tfen beklemede kalÄ±n...`, components: [],ephemeral: true});
  
var LogChannel = client.guilds.cache.get(ayarlar.GuildID).channels.cache.find((channel) => channel.id === ayarlar.CanlÄ±DestekLogChannelID);
  let ozi = new MessageEmbed()
  .setDescription(`
${interaction.user} - \`${interaction.user.id}\` kullanÄ±cÄ±sÄ± CanlÄ± DesteÄŸe baÄŸlanmak istiyor kabul ediyormusunuz?
  `)
  .setAuthor({ name: "CanlÄ± Destek", iconURL: client.guilds.cache.get(ayarlar.GuildID).iconURL({ dynamic: true, size: 2048 }) })
  .setThumbnail(interaction.user.displayAvatarURL({ dynamic: true, size: 2048 }))
  .setTimestamp()

 let msg = await LogChannel.send({ content: `<@&${ayarlar.CanlÄ±DestekEkibiRoleID}>`, embeds: [ozi], components: [row3] });

  const collector2 = msg.createMessageComponentCollector({ componentType: 'BUTTON', max: 1 });

  collector2.on("collect", async (interaction2) => {

    if (interaction2.customId == "evet") {
  let ozi2 = new MessageEmbed()
  .setDescription(`
${interaction.user} - \`${interaction.user.id}\` kullanÄ±cÄ±sÄ±nÄ±n CanlÄ± Destek baÅŸvurusu ${interaction2.user} tarafÄ±ndan baÅŸarÄ±yla onaylandÄ±.`)
  .setAuthor({ name: "CanlÄ± Destek", iconURL: client.guilds.cache.get(ayarlar.GuildID).iconURL({ dynamic: true, size: 2048 }) })
  .setThumbnail(interaction2.user.displayAvatarURL({ dynamic: true, size: 2048 }))
  .setFooter({ text: "KullanÄ±cÄ±nÄ±n destek talebini sonlandÄ±rmak iÃ§in oluÅŸturulan kanaldaki butonu kullanÄ±nÄ±z.", iconURL: interaction.user.displayAvatarURL({ dynamic: true }) })

if(msg)

interaction2.reply({
  embeds : [ozi2],
  components : []
})

      client.guilds.cache.get(ayarlar.GuildID).channels.create(`${interaction.user.username}-destek`, {
        parent: ayarlar.CanlÄ±DestekKategoryID,
        topic: interaction.user.id,
        permissionOverwrites: [{
            id: interaction.user.id,
            allow: ['SEND_MESSAGES', 'VIEW_CHANNEL'],
          },

          {
            id: ayarlar.CanlÄ±DestekEkibiRoleID,
            allow: ['SEND_MESSAGES', 'VIEW_CHANNEL'],
          },
          {
            id: client.guilds.cache.get(ayarlar.GuildID).roles.everyone,
            deny: ['VIEW_CHANNEL'],
          },
        ],
        type: 'text',
      }).then(async c => {

 c.send({
  content: `CanlÄ± Destek KanalÄ± baÅŸarÄ±yla oluÅŸturuldu.\n**Not:** Destek iÅŸlemi bitince veya destek almaktan vazgeÃ§erseniz buton yardÄ±mÄ±yla kapatabilirsiniz.`,
  components : [row31]
})

interaction.user.send({
 content: `CanlÄ± Destek baÄŸlantÄ±nÄ±z baÅŸarÄ±yla ${interaction2.user} tarafÄ±ndan onaylandÄ±.\n\nBuradan destek iÃ§in yetkililerimiz ile konuÅŸabilirsiniz. \` > \` <#${c.id}>`
});
 });
}

    if (interaction2.customId == "hayir") {
  let ozi3 = new MessageEmbed()
  .setDescription(`
${interaction.user} - \`${interaction.user.id}\` kullanÄ±cÄ±sÄ±nÄ±n CanlÄ± Destek baÅŸvurusu ${interaction2.user} tarafÄ±ndan reddedildi.
  `)
  .setAuthor({ name: "CanlÄ± Destek", iconURL: interaction2.guild.iconURL({ dynamic: true, size: 2048 }) })
  .setThumbnail(interaction2.user.displayAvatarURL({ dynamic: true, size: 2048 }))
  .setTimestamp()

if(msg)
interaction2.reply({
  embeds : [ozi3],
  components : []
})

    await interaction.user.send({ content: `CanlÄ± desteÄŸe baÄŸlanÄ±lÄ±rken bir hata oluÅŸtu veya baÄŸlantÄ± onaylanmadÄ±!`, components: []}); 
}
    })


client.on("interactionCreate", async (interaction3) => {
if (interaction3.customId == "kapat") {
const guild = client.guilds.cache.get(interaction3.guildId);
const chan = guild.channels.cache.get(interaction3.channelId);
await chan.delete().catch(() => {});
}
})


          collector.stop()
        } 
    
        if(interaction.customId === "hyr") {
          await interaction.reply({ content: `CanlÄ± desteÄŸe baÄŸlanÄ±lÄ±rken bir hata oluÅŸtu veya baÄŸlantÄ± onaylanmadÄ±!`, components: [],ephemeral: true}); 
          collector.stop()
        }


//////////////////////////////////////////////////////////////////////////////////////////


if (interaction.values[0] === "cezapuan") {
    interaction.reply({ content : `
**${interaction.guild.name}** sunucusunda ${cezapuanData ? cezapuanData.cezapuan : 0} ceza puanÄ±n bulunmakta.
`, ephemeral: true})
}

if (interaction.values[0] === "nick") {
    interaction.reply({ content : `
AÅŸaÄŸÄ±da sunucu iÃ§erisinde ki isimleriniz (${data ? data.names.length : "0"}) sÄ±ralandÄ±rÄ±lmÄ±ÅŸtÄ±r:
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
${data ? data.names.splice(0, 10).map((x, i) => `\`${i + 1}.\` \`${x.name}\` (${x.rol}) , (<@${x.yetkili}>) , **[**\`${moment(x.date).format("LLL")}\`**]**`).join("\n") : "Bu kullanÄ±cÄ±ya ait isim geÃ§miÅŸi bulunmuyor!"}
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
`, ephemeral: true})
}
 
if (interaction.values[0] === "hesaptarih") {
    interaction.reply({ content : `
HesabÄ±nÄ±z <t:${Math.floor(member.createdTimestamp / 1000)}:R> aÃ§Ä±lmÄ±ÅŸ.
`, ephemeral: true})
}
  
if (interaction.values[0] === "davet") {
    interaction.reply({ content : `
AÅŸaÄŸÄ± da davet bilgileri detaylÄ± bir ÅŸekilde listelendirilmiÅŸtir.

\`â€¢\` **Toplam:** \` ${total} \` (**Bonus:** \` +${bonus} \`)
\`â€¢\` **Girenler:** \` +${total} \` (**Sahte:** \`${fake}\`, **AyrÄ±lmÄ±ÅŸ:**\` ${leave} \` )
\`â€¢\` **GÃ¼nlÃ¼k:** \` +${daily} \`
\`â€¢\` **HaftalÄ±k:** \` +${weekly} \`
`, ephemeral: true})
}

if (interaction.values[0] === "katÄ±lÄ±mtarih") {
    interaction.reply({ content : `
**${interaction.guild.name}** Sunucusuna <t:${Math.floor(interaction.member.joinedTimestamp / 1000)}:R> katÄ±lmÄ±ÅŸsÄ±nÄ±z.
`, ephemeral: true})
}


if (interaction.values[0] === "gereksizrol") {
  interaction.member.roles.remove("1062845165779308574")
  interaction.member.roles.remove("1063100819567824926")
    interaction.reply({ content : `
Ãœzerinizde bulunan etkinlik ve diÄŸer roller temizlendi.
`, ephemeral: true})
}


if (interaction.values[0] === "weeklystats") {
    interaction.reply({ content : `
**Merhaba!** âœ§ ${interaction.user}
HaftalÄ±k toplamda **${voiceWeekly}** boyunca zaman geÃ§irmiÅŸsin.
HaftalÄ±k toplamda **${Number(messageWeekly).toLocaleString()} mesaj** istatistiÄŸiniz bulunuyor.
`, ephemeral: true})
}

if (interaction.values[0] === "serverinfo") {
    interaction.reply({ content : `
**${interaction.guild.name}** Sunucusunun Bilgisi
Sunucumuz da **${(interaction.guild.memberCount)}** Ã¼ye bulunmakta.
Sunucumuz da **${AktifMember}** aktif Ã¼ye bulunmakta.
Sesli kanallarda **${(interaction.guild.members.cache.filter((x) => x.voice.channel).size)}** Ã¼ye bulunmakta.
`, ephemeral: true}) 
}

if (interaction.values[0] === "roleinfo") {
    interaction.reply({ content : `
ÃœstÃ¼nÃ¼zde bulunan rol(ler) ÅŸunlardÄ±r:
${(await interaction.guild.members.cache.get(member.id).roles.cache.filter(a => a.name !== '@everyone').map(a => a).join(' ') ? await interaction.guild.members.cache.get(member.id).roles.cache.filter(a => a.name !== '@everyone').map(a => a).join(',\n') : 'HiÃ§ yok.')}
`, ephemeral: true}) 
}

if (interaction.values[0] === "kÄ±sayollar1") {
    interaction.reply({ content : `
\`\`\`
${client.commands.filter(x => x.conf.category !== "-" && x.conf.category == "kullanÄ±cÄ±").map(x => `.${x.conf.help}`).join('\n')}
\`\`\`
`, ephemeral: true })
};

if (interaction.values[0] === "kÄ±sayollar2") {
    interaction.reply({ content : `
\`\`\`
${client.commands.filter(x => x.conf.category !== "-" && x.conf.category == "market").map(x => `.${x.conf.help}`).join('\n')}
\`\`\`
`, ephemeral: true })
};

if (interaction.values[0] === "kÄ±sayollar3") {
    interaction.reply({ content : `
\`\`\`
${client.commands.filter(x => x.conf.category !== "-" && x.conf.category == "kayÄ±t").map(x => `.${x.conf.help}`).join('\n')}
\`\`\`
`, ephemeral: true })
};
  
if (interaction.values[0] === "kÄ±sayollar4") {
    interaction.reply({ content : `
\`\`\`
${client.commands.filter(x => x.conf.category !== "-" && x.conf.category == "cezalandÄ±rma").map(x => `.${x.conf.help}`).join('\n')}
\`\`\`
`, ephemeral: true })
};

if (interaction.values[0] === "kÄ±sayollar5") {
    interaction.reply({ content : `
\`\`\`
${client.commands.filter(x => x.conf.category !== "-" && x.conf.category == "stat").map(x => `.${x.conf.help}`).join('\n')}
\`\`\`
`, ephemeral: true })
};

if (interaction.values[0] === "kÄ±sayollar6") {
    interaction.reply({ content : `
\`\`\`
${client.commands.filter(x => x.conf.category !== "-" && x.conf.category == "yetkili").map(x => `.${x.conf.help}`).join('\n')}
\`\`\`
`, ephemeral: true })
};

if (interaction.values[0] === "kÄ±sayollar7") {
    interaction.reply({ content : `
\`\`\`
${client.commands.filter(x => x.conf.category !== "-" && x.conf.category == "yÃ¶netim").map(x => `.${x.conf.help}`).join('\n')}
\`\`\`
`, ephemeral: true })
};

if (interaction.values[0] === "kÄ±sayollar8") {
    interaction.reply({ content : `
\`\`\`
${client.commands.filter(x => x.conf.category !== "-" && x.conf.category == "sahip").map(x => `.${x.conf.help}`).join('\n')}
\`\`\`
`, ephemeral: true })
};

//////////////////////////////////////////////////////////////////////////////////////////// MODAAALLLL BAABBBYYYY
    
})
